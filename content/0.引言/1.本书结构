本书会首先介绍一些较为简单的特性 (如 `static_assert`, `nullptr`) 或较为独立的特性 (如类型推导), 它们中大部分也广泛出现在其他更重量级的特性中, 在开篇中先浏览这些部分有助于对后文的理解. 不过也因此前三章的内容组织会更为松散一些.

之后介绍的各个核心特性将以话题的方式编排, 每个特性为一个章节. 不过, 各个章节之间的内容仍然有依赖性, 因此还请读者按顺序阅览.

而如正则表达式, 随机数等库的引入虽然也属于 C++11 新添内容, 然其领域性较强, 与语言本身关系不大, 若逐个 API 进行介绍不免过于乏味, 故本书中不会包括这些内容.

对于特性的介绍, 笔者更希望谈及的是为何引入某个特性 (如移动语义等部分), 其次是某个特性的 API 设计 (如多线程部分), 以及如何使用或实现某个特性 (如可变参数模板部分). 分析特性时当然会在使用示例代码, 届时会优先使用 STL 源代码中的实现; 其他情况下将会使用一些公有领域在线资料给出的示例, 或自行编制的代码.

使用 STL 源代码自然是考虑其权威性, 集 C++ 实现之大成. 但若深究其各个 API 的实现, 又不免过于繁琐.^[[如果要了解 C++ 标准库的实现, 侯捷先生所著的 <<STL 源码剖析>> 乃最佳选择]] 故书中引用 STL 实现将跳过无关部分, 只取对介绍特性或运用特性相关的代码, 同时为了保持代码原意, 对源代码不进行除了重新排版之外的改动, 但这样不免会出现之后章节才会介绍的特性或关键字, 这种情况下会先给出一个简单交代. 另外为了准确描述, 会将一些内容以注释的形式写在代码上下文中.

本书中所引用的 STL 源代码来自 Ubuntu 14.04 LTS desktop-amd64 / GCC 4.8 提供的实现, 位于 /usr/include/g++/4.8 目录下. 引用时, 会以相对此路径的 "文件名:行号" 格式给出源码位置, 同一节中多次出现同一文件中的代码, 在第二次及之后只写出 ":行号". 书中示例若无特别说明, 亦皆在 64 位 Ubuntu 系统下以 gcc 4.8 编译, 编译参数为 `-std=c++0x -pthread`.
